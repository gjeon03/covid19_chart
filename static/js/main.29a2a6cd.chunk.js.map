{"version":3,"sources":["api.ts","styles/covid19View.ts","chart/Now.tsx","chart/Total.tsx","styles/loader.ts","routes/Domestic.tsx","atoms.ts","routes/ByRegion.tsx","styles/main.ts","routes/Main.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["TOTAL_URL","process","CITY_URL","fetchTotal","fetch","then","response","json","fetchCity","Object","DivBox","styled","div","TotalContainer","NowContainer","ByRegionContainer","Text","span","props","theme","boxColor","textColor","Overview","OverviewItem","MessageBox","Message","Select","select","selectBox","Now","cityData","koreaCcase","newCcase","caseResult","String","replace","type","series","data","Number","newFcase","options","chart","height","width","toolbar","show","background","plotOptions","bar","barHeight","distributed","horizontal","dataLabels","position","colors","enabled","textAnchor","style","formatter","val","opt","w","globals","labels","dataPointIndex","offsetX","dropShadow","stroke","xaxis","categories","axisBorder","axisTicks","grid","yaxis","legend","tooltip","x","y","title","Total","totalData","city1p","city2p","city3p","city4p","city5p","city1n","city2n","city3n","city4n","city5n","Loader","Domestic","CityTitles","totalLoading","cityLoading","TotalDeath","TotalCase","TotalRecovered","korea","isDarkAtom","atom","key","default","cityTitlesState","서울","ByRegion","dataDelete","resultCode","resultMessage","cityDataArray","values","createArray","useRecoilState","cityTitle","setCityTitle","useState","result","setResult","useEffect","tmp","find","toDo","countryName","value","onInput","event","currentTarget","map","obj","index","death","totalCase","recovered","newCase","percentage","Container","Header","header","Title","h1","accentColor","Tabs","Tab","isActive","ImgContainer","Backdrop","Main","useQuery","isLoading","domesticMatch","useMatch","regionMatch","domesticData","byRegionData","setDarkAtom","useSetRecoilState","isDark","useRecoilValue","urlCheck","to","onChange","current","checked","size","path","element","Router","basename","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","context","document","getElementById"],"mappings":"iNAAMA,EAAS,qDAAiDC,qCAC1DC,EAAQ,iEAA6DD,qCAEpE,SAASE,IACf,OAAOC,MAAM,GAAD,OAAIJ,IAAaK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAGnD,SAASC,IACf,OAAOJ,MAAM,GAAD,OAAIF,IAAYG,MAAK,SAACC,GAAD,OAAcG,OAAOH,EAASC,W,gCCNnDG,EAASC,IAAOC,IAAV,iDAKNC,EAAiBF,YAAOD,EAAPC,CAAH,0BAEdG,EAAeH,YAAOD,EAAPC,CAAH,0BAEZI,EAAoBJ,YAAOD,EAAPC,CAAH,0BAEjBK,EAAOL,IAAOM,KAAV,4OAII,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAErB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aAQ7BC,EAAWX,IAAOC,IAAV,sLAGA,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,YACrB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aAK7BE,EAAeZ,IAAOC,IAAV,sUAKf,SAAAM,GAAK,OAAIA,EAAMC,MAAME,aAalBG,EAAab,IAAOC,IAAV,gDAIVa,EAAUd,IAAOM,KAAV,mDAIPS,EAASf,IAAOgB,OAAV,qXAEE,SAAAT,GAAK,OAAIA,EAAMC,MAAMS,aAKhC,SAAAV,GAAK,OAAIA,EAAMC,MAAME,aAEV,SAAAH,GAAK,OAAIA,EAAMC,MAAME,aAIpB,SAAAH,GAAK,OAAIA,EAAMC,MAAMS,aAChC,SAAAV,GAAK,OAAIA,EAAMC,MAAME,a,wBCajBQ,MAlFf,YAAoC,IAArBC,EAAoB,EAApBA,SACRC,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAUE,SACvBC,EAAaC,OAAOH,GAAYI,QAAQ,IAAK,IACnD,OACC,cAAC,IAAD,CACCC,KAAK,MACLC,OAAQ,CAAC,CACRC,KAAM,CACgB,EAArBC,OAAON,GACsB,EAA7BM,OAAM,OAACT,QAAD,IAACA,OAAD,EAACA,EAAUU,aAEnBC,QAAS,CACRC,MAAO,CACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACRC,MAAM,GAEPC,WAAY,eAEbC,YAAa,CACZC,IAAK,CACJC,UAAW,OACXC,aAAa,EACbC,YAAY,EACZC,WAAY,CACXC,SAAU,YAIbC,OAAQ,CAAC,UAAW,WACpBF,WAAY,CACXG,SAAS,EACTC,WAAY,QACZC,MAAO,CACNH,OAAQ,CAAC,YAEVI,UAAW,SAAUC,EAAKC,GACzB,OAAOA,EAAIC,EAAEC,QAAQC,OAAOH,EAAII,gBAAkB,MAAQL,GAE3DM,QAAS,EACTC,WAAY,CACXX,SAAS,IAGXY,OAAQ,CACPxB,MAAO,EACPW,OAAQ,CAAC,YAEVc,MAAO,CACNC,WAAY,CAAC,eAAM,4BACnBC,WAAY,CAAEzB,MAAM,GACpB0B,UAAW,CAAE1B,MAAM,GACnBkB,OAAQ,CAAElB,MAAM,IAEjB2B,KAAM,CAAE3B,MAAM,GACd4B,MAAO,CACNV,OAAQ,CACPlB,MAAM,IAGR6B,OAAQ,CACP7B,MAAM,GAEP8B,QAAS,CACRzD,MAAO,OACP0D,EAAG,CACF/B,MAAM,GAEPgC,EAAG,CACFC,MAAO,CACNpB,UAAW,WACV,MAAO,WC7CAqB,I,EAAAA,EA3Bf,YAAuC,IAAtBC,EAAqB,EAArBA,UAChB,OACC,cAAC,IAAD,CACC7C,KAAK,QACLC,OAAQ,CACPE,OAAM,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAWC,QAClB3C,OAAM,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAWE,QAClB5C,OAAM,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAWG,QAClB7C,OAAM,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAWI,QAClB9C,OAAM,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAWK,SAEnB7C,QAAS,CACRuB,OAAQ,EACE,OAATiB,QAAS,IAATA,OAAA,EAAAA,EAAWM,SAAU,IACZ,OAATN,QAAS,IAATA,OAAA,EAAAA,EAAWO,SAAU,IACZ,OAATP,QAAS,IAATA,OAAA,EAAAA,EAAWQ,SAAU,IACZ,OAATR,QAAS,IAATA,OAAA,EAAAA,EAAWS,SAAU,IACZ,OAATT,QAAS,IAATA,OAAA,EAAAA,EAAWU,SAAU,IAEtBhB,OAAQ,CACP7B,MAAM,OCzBE8C,EAASjF,IAAOM,KAAV,sEC4DJ4E,ICvDHC,EDuDGD,EAxCf,YAA+E,IAA3DE,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,YAAaf,EAA+B,EAA/BA,UAAWnD,EAAoB,EAApBA,SACzD,OACC,qCACC,cAAC,IAAD,UACC,gEAED,cAACjB,EAAD,UACEkF,EAAgB,cAACH,EAAD,yBAChB,eAACtE,EAAD,WACC,eAACC,EAAD,WACC,sDACA,sCAAO0D,QAAP,IAAOA,OAAP,EAAOA,EAAWgB,gBAEnB,eAAC1E,EAAD,WACC,sDACA,sCAAO0D,QAAP,IAAOA,OAAP,EAAOA,EAAWiB,eAEnB,eAAC3E,EAAD,WACC,6DACA,sCAAO0D,QAAP,IAAOA,OAAP,EAAOA,EAAWkB,yBAKtB,eAACrF,EAAD,WACC,cAACE,EAAD,8CACCgF,EAAe,cAACJ,EAAD,yBACf,cAAC,EAAD,CAAK9D,SAAQ,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAUsE,WAG3B,eAACrF,EAAD,WACC,cAACC,EAAD,8CACC+E,EAAgB,cAACH,EAAD,yBAChB,cAAC,EAAD,CAAOX,UAAWA,W,eCrDVoB,EAAaC,YAAK,CAC9BC,IAAK,SACLC,SAAS,K,SAGEV,K,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,+BAAAA,E,gCAAAA,M,KAqBL,IAAMW,EAAkBH,YAAiB,CAC/CC,IAAK,cACLC,QAASV,EAAWY,eCsENC,I,mBAAAA,GAvEf,YAAsD,IAAlC7E,EAAiC,EAAjCA,SAAUkE,EAAuB,EAAvBA,YACvBY,EAAU,eAAQ9E,UACjB8E,EAAWC,kBACXD,EAAWE,qBACXF,EAAWR,MAClB,IAAMW,EAVP,SAAqBH,GAEpB,OADW,YAAOnG,OAAOuG,OAAOJ,IASVK,CAAYL,GALkB,EAMlBM,YAAeT,GANG,mBAM7CU,EAN6C,KAMlCC,EANkC,OAUxBC,qBAVwB,mBAU7CC,EAV6C,KAUrCC,EAVqC,KAiBpD,OANAC,qBAAU,WACT,IAAKxB,EAAa,CACjB,IAAMyB,EAAMV,EAAcW,MAAK,SAACC,GAAD,OAAUA,EAAKC,cAAgBT,KAC9DI,EAAUE,MAET,CAACzB,EAAamB,EAAWJ,IAE3B,qCACC,cAAC,IAAD,UACC,oEAEAf,EAAe,cAACJ,EAAD,yBACf,qCACC,cAAClE,EAAD,CAAQmG,MAAOV,EAAWW,QAjBd,SAACC,GAChBX,EAAaW,EAAMC,cAAcH,QAgB9B,SACEd,EAAckB,KAAI,SAACC,EAAKC,GACxB,IAAMP,EAAcM,EAAIN,YACxB,OAAO,wBAAoBC,MAAOD,EAA3B,SAAyCA,GAA5BO,QAGtB,eAACtH,EAAD,WACC,eAACS,EAAD,WACC,eAACC,EAAD,WACC,sDACA,sCAAO+F,QAAP,IAAOA,OAAP,EAAOA,EAAQc,WAEhB,eAAC7G,EAAD,WACC,sDACA,sCAAO+F,QAAP,IAAOA,OAAP,EAAOA,EAAQe,eAEhB,eAAC9G,EAAD,WACC,6DACA,sCAAO+F,QAAP,IAAOA,OAAP,EAAOA,EAAQgB,kBAGjB,eAACxH,EAAD,WACC,cAACE,EAAD,8CACA,cAAC,EAAD,CAAKc,SAAUwF,OAEhB,eAAC5G,EAAD,WACC,eAACY,EAAD,WACC,eAACC,EAAD,WACC,0EACA,sCAAO+F,QAAP,IAAOA,OAAP,EAAOA,EAAQiB,aAEhB,eAAChH,EAAD,WACC,kGACA,wCAAO+F,QAAP,IAAOA,OAAP,EAAOA,EAAQkB,WAAf,mBAGF,cAAChH,EAAD,UACC,cAACC,EAAD,mQCxFKgH,GAAY9H,IAAOC,IAAV,0FAMT8H,GAAS/H,IAAOgI,OAAV,qNAaNC,GAAQjI,IAAOkI,GAAV,iEAER,SAAC3H,GAAD,OAAWA,EAAMC,MAAM2H,eAGpBC,GAAOpI,IAAOC,IAAV,4HAOJoI,GAAMrI,IAAOM,KAAV,8UAIK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAErB,SAACF,GAAD,OACnBA,EAAM+H,SAAW/H,EAAMC,MAAM2H,YAAc,SAAA5H,GAAK,OAAIA,EAAMC,MAAME,cAExD,SAACH,GAAD,OACRA,EAAM+H,SAAW/H,EAAMC,MAAM2H,YAAc,SAAA5H,GAAK,OAAIA,EAAMC,MAAME,cAM5C,SAACH,GAAD,OAAWA,EAAMC,MAAM2H,eAClC,SAAC5H,GAAD,OAAWA,EAAMC,MAAM2H,eAIrBI,GAAevI,IAAOC,IAAV,mHAOZuI,GAAWxI,IAAOC,IAAV,8R,oBCkBNwI,OAzDf,WAAiB,IAAD,EACsCC,mBAAiB,QAASlJ,GAA5D4F,EADJ,EACPuD,UAA+BrE,EADxB,EACkB3C,KADlB,EAEoC+G,mBAAiB,OAAQ7I,GAAzDwF,EAFJ,EAEPsD,UAA8BxH,EAFvB,EAEiBQ,KAC1BiH,EAAgBC,YAAS,aACzBC,EAAcD,YAAS,WACvBE,EAAe,CACpB3D,eACAC,cACAf,YACAnD,YAEK6H,EAAe,CACpB7H,WACAkE,eAEK4D,EAAcC,YAAkBxD,GAEhCyD,EAASC,YAAe1D,GACxB2D,EAAWT,GAAiBE,EAClC,OACC,eAAChB,GAAD,WACC,cAAC,IAAD,UACC,+CAED,eAACC,GAAD,WACC,cAACE,GAAD,UACC,cAAC,IAAD,CAAMqB,GAAG,IAAT,wBAED,8BACC,cAAC,KAAD,CACCC,SAdkB,kBAAMN,GAAY,SAACO,GAAD,OAAcA,MAelDC,QAASN,EACTO,KAAM,UAIT,eAACtB,GAAD,WACC,cAACC,GAAD,CAAKC,SAA4B,OAAlBM,EAAf,SACC,cAAC,IAAD,CAAMU,GAAG,WAAT,4BAED,cAACjB,GAAD,CAAKC,SAA0B,OAAhBQ,EAAf,SACC,cAAC,IAAD,CAAMQ,GAAG,SAAT,mCAGDD,EAAW,KACX,cAACd,GAAD,UACC,cAACC,GAAD,MAGF,eAAC,IAAD,WACC,cAAC,IAAD,CAAOmB,KAAK,WAAWC,QAAS,cAAC,EAAD,eAAcb,MAC9C,cAAC,IAAD,CAAOY,KAAK,SAASC,QAAS,cAAC,GAAD,eAAcZ,aC7DjCa,I,GAAAA,GATf,WACC,OACC,cAAC,IAAD,CAAeC,SAAUxK,iBAAzB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOqK,KAAK,KAAKC,QAAS,cAAC,GAAD,W,SCLjBG,GAA0B,CACtCC,QAAS,UACTtJ,UAAW,UACXyH,YAAa,UACb1H,SAAU,qBACVQ,UAAW,WAGCgJ,GAA2B,CACvCD,QAAS,aACTtJ,UAAW,UACXyH,YAAa,UACb1H,SAAU,UACVQ,UAAW,WCPNiJ,GAAcC,YAAH,w7CAmDI,SAAC5J,GAAD,OAAWA,EAAMC,MAAMwJ,WAClC,SAACzJ,GAAD,OAAWA,EAAMC,MAAME,aAuBlB0J,OAbf,WACE,IAAMjB,EAASC,YAAe1D,GAC9B,OACE,mCACE,eAAC,IAAD,CAAelF,MAAO2I,EAASY,GAAYE,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,UCtErCC,GAAc,IAAIC,cAGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,IAAD,CAAgBM,QALA,GAKhB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRC,SAASC,eAAe,W","file":"static/js/main.29a2a6cd.chunk.js","sourcesContent":["const TOTAL_URL = `https://api.corona-19.kr/korea/?serviceKey=${process.env.REACT_APP_API_KEY}`;\nconst CITY_URL = `https://api.corona-19.kr/korea/country/new/?serviceKey=${process.env.REACT_APP_API_KEY}`;\n\nexport function fetchTotal() {\n\treturn fetch(`${TOTAL_URL}`).then((response) => response.json());\n}\n\nexport function fetchCity() {\n\treturn fetch(`${CITY_URL}`).then((response) => Object(response.json()));\n}","import styled from \"styled-components\";\n\nexport const DivBox = styled.div`\n\tmargin: 25px 0px;\n`;\n\n\nexport const TotalContainer = styled(DivBox)``;\n\nexport const NowContainer = styled(DivBox)``;\n\nexport const ByRegionContainer = styled(DivBox)``;\n\nexport const Text = styled.span`\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-weight: 400;\n\tbackground-color: ${props => props.theme.boxColor};\n\tborder-radius: 10px;\n\tborder: 1px solid ${props => props.theme.textColor};\n\tdisplay: block;\n\tfont-size: 20px;\n\tpadding: 5px;\n\t`;\n\n\n\nexport const Overview = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground-color: ${props => props.theme.boxColor};\n\tborder: 1px solid ${props => props.theme.textColor};\n\tpadding: 12px 20px;\n\tborder-radius: 10px;\n\t`;\n\nexport const OverviewItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 33%;\n\tcolor: ${props => props.theme.textColor};\n\tspan:first-child {\n\t\tfont-size: 13px;\n\t\tfont-weight: 400;\n\t\ttext-transform: uppercase;\n\t\tmargin-bottom: 5px;\n\t}\n\tspan:last-child {\n\t\tfont-size: 18px;\n\t\tfont-weight:700;\n\t}\n`;\n\nexport const MessageBox = styled.div`\n\tmargin-top:15px;\n`;\n\t\nexport const Message = styled.span`\n\ttext-align: center;\n`;\n\nexport const Select = styled.select`\n\twidth: 100%;\n\tbackground-color: ${props => props.theme.selectBox};\n\tbackground-size: 20px;\n\tpadding: 10px;\n\tborder-radius: 10px;\n\toutline: 0 none;\n\tcolor: ${props => props.theme.textColor};\n\tfont-size: 16px; \n\tborder: 1px solid ${props => props.theme.textColor};\n\tfont-weight: 500;\n\toption {\n\t\tbackground: black;\n\t\tbackground-color: ${props => props.theme.selectBox};\n\t\tcolor: ${props => props.theme.textColor};\n\t\tpadding: 3px 0;\n\t\ttext-align: center;\n\t}\n`\n\t\n","import ApexChart from \"react-apexcharts\";\nimport { ICity } from \"../types/cityData\";\n\ninterface IProps {\n\tcityData?: ICity;\n}\n\nfunction Now({ cityData }: IProps) {\n\tconst koreaCcase = cityData?.newCcase;\n\tconst caseResult = String(koreaCcase).replace(\",\", \"\");\n\treturn (\n\t\t<ApexChart\n\t\t\ttype=\"bar\"\n\t\t\tseries={[{\n\t\t\t\tdata: [\n\t\t\t\t\tNumber(caseResult) | 0,\n\t\t\t\t\tNumber(cityData?.newFcase) | 0]\n\t\t\t}]}\n\t\t\toptions={{\n\t\t\t\tchart: {\n\t\t\t\t\theight: 100,\n\t\t\t\t\twidth: 500,\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tbackground: \"transparent\",\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tbar: {\n\t\t\t\t\t\tbarHeight: '100%',\n\t\t\t\t\t\tdistributed: true,\n\t\t\t\t\t\thorizontal: true,\n\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\tposition: 'bottom'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcolors: ['#33b2df', '#ff4444'],\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\ttextAnchor: 'start',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolors: ['#ced6e0']\n\t\t\t\t\t},\n\t\t\t\t\tformatter: function (val, opt) {\n\t\t\t\t\t\treturn opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val\n\t\t\t\t\t},\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\tdropShadow: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\tcolors: [`#f1f2f6`]\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\tcategories: ['국내', '해외유입'],\n\t\t\t\t\taxisBorder: { show: false },\n\t\t\t\t\taxisTicks: { show: false },\n\t\t\t\t\tlabels: { show: false },\n\t\t\t\t},\n\t\t\t\tgrid: { show: false },\n\t\t\t\tyaxis: {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\ttheme: 'dark',\n\t\t\t\t\tx: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default Now;","import ApexChart from \"react-apexcharts\";\nimport { ITotal } from \"../types/totalData\";\n\ninterface IProps {\n\ttotalData?: ITotal;\n}\n\nfunction Total({ totalData }: IProps) {\n\treturn (\n\t\t<ApexChart\n\t\t\ttype='donut'\n\t\t\tseries={[\n\t\t\t\tNumber(totalData?.city1p),\n\t\t\t\tNumber(totalData?.city2p),\n\t\t\t\tNumber(totalData?.city3p),\n\t\t\t\tNumber(totalData?.city4p),\n\t\t\t\tNumber(totalData?.city5p)\n\t\t\t]}\n\t\t\toptions={{\n\t\t\t\tlabels: [\n\t\t\t\t\ttotalData?.city1n || \"\",\n\t\t\t\t\ttotalData?.city2n || \"\",\n\t\t\t\t\ttotalData?.city3n || \"\",\n\t\t\t\t\ttotalData?.city4n || \"\",\n\t\t\t\t\ttotalData?.city5n || \"\",\n\t\t\t\t],\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default Total;","import styled from \"styled-components\";\n\nexport const Loader = styled.span`\n\ttext-align: center;\n\tdisplay: block;\n`;","import {\n\tTotalContainer,\n\tNowContainer,\n\tByRegionContainer,\n\tText,\n\tOverview,\n\tOverviewItem\n} from \"../styles/covid19View\";\nimport Now from \"../chart/Now\";\nimport Total from \"../chart/Total\";\nimport { ITotal } from \"../types/totalData\";\nimport { ICitys } from \"../types/cityData\";\nimport { Loader } from \"../styles/loader\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface IProps {\n\ttotalLoading: boolean;\n\tcityLoading: boolean;\n\ttotalData?: ITotal;\n\tcityData?: ICitys;\n}\n\nfunction Domestic({ totalLoading, cityLoading, totalData, cityData }: IProps) {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>국내 확진</title>\n\t\t\t</Helmet>\n\t\t\t<TotalContainer>\n\t\t\t\t{totalLoading ? (<Loader>Loading...</Loader>) : (\n\t\t\t\t\t<Overview>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>사망자</span>\n\t\t\t\t\t\t\t<span>{totalData?.TotalDeath}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>확진자</span>\n\t\t\t\t\t\t\t<span>{totalData?.TotalCase}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>제한 해제</span>\n\t\t\t\t\t\t\t<span>{totalData?.TotalRecovered}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t</Overview>\n\t\t\t\t)}\n\t\t\t</TotalContainer>\n\t\t\t<NowContainer>\n\t\t\t\t<Text>신규 확진자</Text>\n\t\t\t\t{cityLoading ? (<Loader>Loading...</Loader>) : (\n\t\t\t\t\t<Now cityData={cityData?.korea} />\n\t\t\t\t)}\n\t\t\t</NowContainer>\n\t\t\t<ByRegionContainer>\n\t\t\t\t<Text>지역별 비율</Text>\n\t\t\t\t{totalLoading ? (<Loader>Loading...</Loader>) : (\n\t\t\t\t\t<Total totalData={totalData} />\n\t\t\t\t)}\n\t\t\t</ByRegionContainer>\n\t\t</>\n\t);\n}\n\nexport default Domestic;","import { atom} from \"recoil\";\n\nexport const isDarkAtom = atom({\n\tkey: \"isDark\",\n\tdefault: true,\n});\n\nexport enum CityTitles {\n\t\"서울\" = \"서울\",\n\t\"부산\" = \"부산\",\n\t\"대구\" = \"대구\",\n\t\"인천\" = \"인천\",\n\t\"광주\" = \"광주\",\n\t\"대전\" = \"대전\",\n\t\"울산\" = \"울산\",\n\t\"세종\" = \"세종\",\n\t\"경기\" = \"경기\",\n\t\"강원\" = \"강원\",\n\t\"충북\" = \"충북\",\n\t\"충남\" = \"충남\",\n\t\"전북\" = \"전북\",\n\t\"전남\" = \"전남\",\n\t\"경북\" = \"경북\",\n\t\"경남\" = \"경남\",\n\t\"제주\" = \"제주\",\n\t\"검역\" = \"검역\",\n}\n\nexport const cityTitlesState = atom<CityTitles>({\n\tkey: \"countryName\",\n\tdefault: CityTitles.서울,\n})\n","import { useRecoilState } from \"recoil\";\nimport { CityTitles, cityTitlesState } from \"../atoms\";\nimport { useEffect, useState } from \"react\";\nimport {\n\tDivBox,\n\tTotalContainer,\n\tNowContainer,\n\tText,\n\tOverview,\n\tOverviewItem,\n\tMessage,\n\tMessageBox,\n\tSelect,\n} from \"../styles/covid19View\";\nimport { Loader } from \"../styles/loader\";\nimport { ICitys, ICity } from \"../types/cityData\";\nimport Now from \"../chart/Now\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface IProps {\n\tcityData?: ICitys;\n\tcityLoading: boolean;\n}\n\nfunction createArray(dataDelete?: ICity) {\n\tconst array = [...Object.values(dataDelete as ICity) as ICity[]];\n\treturn array as ICity[];\n}\n\nfunction ByRegion({ cityData, cityLoading }: IProps) {\n\tconst dataDelete = { ...cityData };\n\tdelete dataDelete.resultCode;\n\tdelete dataDelete.resultMessage;\n\tdelete dataDelete.korea;\n\tconst cityDataArray = createArray(dataDelete as ICity);\n\tconst [cityTitle, setCityTitle] = useRecoilState(cityTitlesState);\n\tconst onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n\t\tsetCityTitle(event.currentTarget.value as CityTitles);\n\t};\n\tconst [result, setResult] = useState<ICity>();\n\tuseEffect(() => {\n\t\tif (!cityLoading) {\n\t\t\tconst tmp = cityDataArray.find((toDo) => toDo.countryName === cityTitle) as ICity;\n\t\t\tsetResult(tmp as ICity);\n\t\t}\n\t}, [cityLoading, cityTitle, cityDataArray])\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>시·도 확진</title>\n\t\t\t</Helmet>\n\t\t\t{cityLoading ? (<Loader>Loading...</Loader>) : (\n\t\t\t\t<>\n\t\t\t\t\t<Select value={cityTitle} onInput={onInput}>\n\t\t\t\t\t\t{cityDataArray.map((obj, index) => {\n\t\t\t\t\t\t\tconst countryName = obj.countryName;\n\t\t\t\t\t\t\treturn <option key={index} value={countryName}>{countryName}</option>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<TotalContainer>\n\t\t\t\t\t\t<Overview>\n\t\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t\t<span>사망자</span>\n\t\t\t\t\t\t\t\t<span>{result?.death}</span>\n\t\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t\t<span>확진자</span>\n\t\t\t\t\t\t\t\t<span>{result?.totalCase}</span>\n\t\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t\t<span>제한 해제</span>\n\t\t\t\t\t\t\t\t<span>{result?.recovered}</span>\n\t\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t</Overview>\n\t\t\t\t\t\t<NowContainer>\n\t\t\t\t\t\t\t<Text>신규 확진자</Text>\n\t\t\t\t\t\t\t<Now cityData={result} />\n\t\t\t\t\t\t</NowContainer>\n\t\t\t\t\t\t<DivBox>\n\t\t\t\t\t\t\t<Overview>\n\t\t\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t\t\t<span>총 신규 확진자</span>\n\t\t\t\t\t\t\t\t\t<span>{result?.newCase}</span>\n\t\t\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t\t\t<span>발생률((확진자/인구)/10만)</span>\n\t\t\t\t\t\t\t\t\t<span>{result?.percentage} 명</span>\n\t\t\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t\t</Overview>\n\t\t\t\t\t\t\t<MessageBox>\n\t\t\t\t\t\t\t\t<Message>※ 지역구분은 신고지를 기준으로 하며, 초기 신고 이후 소관지역이 변경된 경우 변동 가능</Message>\n\t\t\t\t\t\t\t</MessageBox>\n\t\t\t\t\t\t</DivBox>\n\t\t\t\t\t</TotalContainer>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default ByRegion;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tpadding: 0px 20px;\n\tmax-width: 480px;\n\tmargin: 0 auto;\n`;\n\nexport const Header = styled.header`\n\theight: 15vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-weight: 500;\n\tposition: relative;\n\tdiv {\n\t\tposition: absolute;\n\t\tright: 0;\n\t}\n`;\n\nexport const Title = styled.h1`\n\tfont-size: 48px;\n\tcolor: ${(props) => props.theme.accentColor};\n`;\n\nexport const Tabs = styled.div`\n\tdisplay:grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tmargin: 25px 0px;\n\tgap: 10px;\n`;\n\nexport const Tab = styled.span<{ isActive: boolean }>`\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-weight: 400;\n\tbackground-color: ${props => props.theme.boxColor};\n\tborder-radius: 10px;\n\tborder: 1px solid ${(props) =>\n\t\tprops.isActive ? props.theme.accentColor : props => props.theme.textColor};\n\tfont-size: 16px;\n\tcolor: ${(props) =>\n\t\tprops.isActive ? props.theme.accentColor : props => props.theme.textColor};\n\ta {\n\t\tpadding: 7px 0px;\n\t\tdisplay: block;\n\t}\n\t&:hover {\n\t\tborder: 1px solid ${(props) => props.theme.accentColor};\n\t\tcolor: ${(props) => props.theme.accentColor};\n\t}\n`;\n\nexport const ImgContainer = styled.div`\n  padding: 50px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n`;\n\nexport const Backdrop = styled.div`\n  width: 400px;\n  height: 350px;\n  background-image: url(\"https://i.pinimg.com/564x/7d/73/3a/7d733acc83cce320af19feb7c38993d0.jpg\");\n  background-position: center center;\n  background-size: cover;\n  filter: blur(2px);\n  opacity: 0.5;\n  z-index: 0;\n`;","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useMatch, Link, Routes, Route } from \"react-router-dom\";\nimport { fetchTotal, fetchCity } from \"../api\";\nimport { useSetRecoilState } from \"recoil\";\nimport Domestic from \"./Domestic\";\nimport ByRegion from \"./ByRegion\";\nimport { ITotal } from \"../types/totalData\";\nimport {\n\tContainer,\n\tHeader,\n\tTitle,\n\tTabs,\n\tTab,\n\tImgContainer,\n\tBackdrop,\n} from \"../styles/main\";\nimport { ICitys } from \"../types/cityData\";\nimport { isDarkAtom } from \"../atoms\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { useRecoilValue } from \"recoil\";\n\nfunction Main() {\n\tconst { isLoading: totalLoading, data: totalData } = useQuery<ITotal>(\"total\", fetchTotal);\n\tconst { isLoading: cityLoading, data: cityData } = useQuery<ICitys>(\"city\", fetchCity);\n\tconst domesticMatch = useMatch(\"/domestic\");\n\tconst regionMatch = useMatch(\"/region\");\n\tconst domesticData = {\n\t\ttotalLoading,\n\t\tcityLoading,\n\t\ttotalData,\n\t\tcityData\n\t};\n\tconst byRegionData = {\n\t\tcityData,\n\t\tcityLoading\n\t}\n\tconst setDarkAtom = useSetRecoilState(isDarkAtom);\n\tconst toggleDarkAtom = () => setDarkAtom((current) => !current);\n\tconst isDark = useRecoilValue(isDarkAtom);\n\tconst urlCheck = domesticMatch || regionMatch;\n\treturn (\n\t\t<Container>\n\t\t\t<Helmet>\n\t\t\t\t<title>COVID-19</title>\n\t\t\t</Helmet>\n\t\t\t<Header>\n\t\t\t\t<Title>\n\t\t\t\t\t<Link to=\"/\">COVID-19</Link>\n\t\t\t\t</Title>\n\t\t\t\t<div>\n\t\t\t\t\t<DarkModeToggle\n\t\t\t\t\t\tonChange={toggleDarkAtom}\n\t\t\t\t\t\tchecked={isDark}\n\t\t\t\t\t\tsize={60}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Header>\n\t\t\t<Tabs>\n\t\t\t\t<Tab isActive={domesticMatch !== null}>\n\t\t\t\t\t<Link to=\"domestic\">국내</Link>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab isActive={regionMatch !== null}>\n\t\t\t\t\t<Link to=\"region\">시·도</Link>\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t\t{urlCheck ? null : (\n\t\t\t\t<ImgContainer>\n\t\t\t\t\t<Backdrop></Backdrop>\n\t\t\t\t</ImgContainer>\n\t\t\t)}\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"domestic\" element={<Domestic {...domesticData} />} />\n\t\t\t\t<Route path=\"region\" element={<ByRegion {...byRegionData} />} />\n\t\t\t</Routes>\n\t\t</Container>\n\t);\n}\n\nexport default Main;","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Main from \"./routes/Main\";\n\nfunction Router() {\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/*\" element={<Main />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t);\n}\nexport default Router;","import {DefaultTheme} from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n\tbgColor: \"#2f3640\",\n\ttextColor: \"#f5f6fa\",\n\taccentColor: \"#bea6fc\",\n\tboxColor: \"rgba(0, 0, 0, 0.5)\",\n\tselectBox: \"#747d8c\",\n}\n\nexport const lightTheme: DefaultTheme = {\n\tbgColor: \"whitesmoke\",\n\ttextColor: \"#2f3640\",\n\taccentColor: \"#bea6fc\",\n\tboxColor: \"#f5f6fa\",\n\tselectBox: \"#f5f6fa\",\n};","import Router from \"./Router\"\nimport { createGlobalStyle } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from 'styled-components';\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Black+Han+Sans&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody {\n  font-weight: 300;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  font-family: 'Black Han Sans', sans-serif;\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from \"recoil\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from './App';\nimport { HelmetProvider } from \"react-helmet-async\";\n\nconst queryClient = new QueryClient();\nconst helmetContext = {};\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <HelmetProvider context={helmetContext}>\n        <RecoilRoot>\n          <App />\n        </RecoilRoot>\n      </HelmetProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}